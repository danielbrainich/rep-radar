{"ast":null,"code":"import getCivicInfoData from'./civicInfo';import getOpenSecretsId from'./openSecretsIds';import getOpenSecretsContributions from'./openSecretsContributions';import getOpenSecretsSummary from'./openSecretsSummary';import getProPublicaIds from'./proPublicaIds';import getProPublicaStatements from'./proPublicaStatements';import getCongressGovBills from'./congressGovBills';import getCongressGovPhoto from'./congressGovPhoto';import getNewsApiData from'./newsApi';const fetchRepData=async formData=>{const address=\"\".concat(formData.streetAddress,\" \").concat(formData.city,\" \").concat(formData.state,\" \").concat(formData.zipCode);const repData=await getCivicInfoData(address);const proPubInfo=await getProPublicaIds(repData.representative.district,repData.representative.state);const openSecretsId=await getOpenSecretsId(repData.representative.state,proPubInfo.id);const contribData=await getOpenSecretsContributions(openSecretsId.repId);const contribSummary=await getOpenSecretsSummary(openSecretsId.repId);const congressGovPhoto=await getCongressGovPhoto(proPubInfo.id);const sponsoredBillInfo=await getCongressGovBills(proPubInfo.id);const statements=await getProPublicaStatements(proPubInfo.id);const news=await getNewsApiData(repData.representative.name);const allRepData={representativeInfo:repData,repContribData:contribData.contributions,repContribSummary:contribSummary.summary,proPublicaInfo:proPubInfo,repPhoto:congressGovPhoto,repSponsoredBills:sponsoredBillInfo,repStatements:statements,news:news};console.log(\"All Rep Data:\",allRepData);return allRepData;};export default fetchRepData;","map":{"version":3,"names":["getCivicInfoData","getOpenSecretsId","getOpenSecretsContributions","getOpenSecretsSummary","getProPublicaIds","getProPublicaStatements","getCongressGovBills","getCongressGovPhoto","getNewsApiData","fetchRepData","formData","address","concat","streetAddress","city","state","zipCode","repData","proPubInfo","representative","district","openSecretsId","id","contribData","repId","contribSummary","congressGovPhoto","sponsoredBillInfo","statements","news","name","allRepData","representativeInfo","repContribData","contributions","repContribSummary","summary","proPublicaInfo","repPhoto","repSponsoredBills","repStatements","console","log"],"sources":["/Users/dbrainy/dev/clean rep radar/rep-radar/front-end/src/api/fetchRepData.js"],"sourcesContent":["import getCivicInfoData from './civicInfo';\nimport getOpenSecretsId from './openSecretsIds';\nimport getOpenSecretsContributions from './openSecretsContributions';\nimport getOpenSecretsSummary from './openSecretsSummary';\nimport getProPublicaIds from './proPublicaIds';\nimport getProPublicaStatements from './proPublicaStatements';\nimport getCongressGovBills from './congressGovBills';\nimport getCongressGovPhoto from './congressGovPhoto';\nimport getNewsApiData from './newsApi';\n\nconst fetchRepData = async (formData) => {\n    const address = `${formData.streetAddress} ${formData.city} ${formData.state} ${formData.zipCode}`;\n    const repData = await getCivicInfoData(address);\n    const proPubInfo = await getProPublicaIds(repData.representative.district, repData.representative.state);\n    const openSecretsId = await getOpenSecretsId(repData.representative.state, proPubInfo.id);\n    const contribData = await getOpenSecretsContributions(openSecretsId.repId);\n    const contribSummary = await getOpenSecretsSummary(openSecretsId.repId);\n    const congressGovPhoto = await getCongressGovPhoto(proPubInfo.id);\n    const sponsoredBillInfo = await getCongressGovBills(proPubInfo.id);\n    const statements = await getProPublicaStatements(proPubInfo.id);\n    const news = await getNewsApiData(repData.representative.name);\n\n    const allRepData =  {\n        representativeInfo: repData,\n        repContribData: contribData.contributions,\n        repContribSummary: contribSummary.summary,\n        proPublicaInfo: proPubInfo,\n        repPhoto: congressGovPhoto,\n        repSponsoredBills: sponsoredBillInfo,\n        repStatements: statements,\n        news: news,\n    };\n    console.log(\"All Rep Data:\", allRepData)\n    return allRepData\n};\n\nexport default fetchRepData;\n"],"mappings":"AAAA,MAAO,CAAAA,gBAAgB,KAAM,aAAa,CAC1C,MAAO,CAAAC,gBAAgB,KAAM,kBAAkB,CAC/C,MAAO,CAAAC,2BAA2B,KAAM,4BAA4B,CACpE,MAAO,CAAAC,qBAAqB,KAAM,sBAAsB,CACxD,MAAO,CAAAC,gBAAgB,KAAM,iBAAiB,CAC9C,MAAO,CAAAC,uBAAuB,KAAM,wBAAwB,CAC5D,MAAO,CAAAC,mBAAmB,KAAM,oBAAoB,CACpD,MAAO,CAAAC,mBAAmB,KAAM,oBAAoB,CACpD,MAAO,CAAAC,cAAc,KAAM,WAAW,CAEtC,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACrC,KAAM,CAAAC,OAAO,IAAAC,MAAA,CAAMF,QAAQ,CAACG,aAAa,MAAAD,MAAA,CAAIF,QAAQ,CAACI,IAAI,MAAAF,MAAA,CAAIF,QAAQ,CAACK,KAAK,MAAAH,MAAA,CAAIF,QAAQ,CAACM,OAAO,CAAE,CAClG,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAAjB,gBAAgB,CAACW,OAAO,CAAC,CAC/C,KAAM,CAAAO,UAAU,CAAG,KAAM,CAAAd,gBAAgB,CAACa,OAAO,CAACE,cAAc,CAACC,QAAQ,CAAEH,OAAO,CAACE,cAAc,CAACJ,KAAK,CAAC,CACxG,KAAM,CAAAM,aAAa,CAAG,KAAM,CAAApB,gBAAgB,CAACgB,OAAO,CAACE,cAAc,CAACJ,KAAK,CAAEG,UAAU,CAACI,EAAE,CAAC,CACzF,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAArB,2BAA2B,CAACmB,aAAa,CAACG,KAAK,CAAC,CAC1E,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAtB,qBAAqB,CAACkB,aAAa,CAACG,KAAK,CAAC,CACvE,KAAM,CAAAE,gBAAgB,CAAG,KAAM,CAAAnB,mBAAmB,CAACW,UAAU,CAACI,EAAE,CAAC,CACjE,KAAM,CAAAK,iBAAiB,CAAG,KAAM,CAAArB,mBAAmB,CAACY,UAAU,CAACI,EAAE,CAAC,CAClE,KAAM,CAAAM,UAAU,CAAG,KAAM,CAAAvB,uBAAuB,CAACa,UAAU,CAACI,EAAE,CAAC,CAC/D,KAAM,CAAAO,IAAI,CAAG,KAAM,CAAArB,cAAc,CAACS,OAAO,CAACE,cAAc,CAACW,IAAI,CAAC,CAE9D,KAAM,CAAAC,UAAU,CAAI,CAChBC,kBAAkB,CAAEf,OAAO,CAC3BgB,cAAc,CAAEV,WAAW,CAACW,aAAa,CACzCC,iBAAiB,CAAEV,cAAc,CAACW,OAAO,CACzCC,cAAc,CAAEnB,UAAU,CAC1BoB,QAAQ,CAAEZ,gBAAgB,CAC1Ba,iBAAiB,CAAEZ,iBAAiB,CACpCa,aAAa,CAAEZ,UAAU,CACzBC,IAAI,CAAEA,IACV,CAAC,CACDY,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEX,UAAU,CAAC,CACxC,MAAO,CAAAA,UAAU,CACrB,CAAC,CAED,cAAe,CAAAtB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}