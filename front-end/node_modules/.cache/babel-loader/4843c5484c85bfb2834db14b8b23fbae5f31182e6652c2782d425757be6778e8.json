{"ast":null,"code":"const fetchOpenSecretsData=async url=>{const response=await fetch(url);if(!response.ok){throw new Error(\"HTTP error. Status: \".concat(response.status));}return response.json();};const reshapeOpenSecretsSummary=data=>{function formatDollars(amount){return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:0,maximumFractionDigits:0}).format(amount);}return{summary:{cashOnHand:formatDollars(data.response.summary['@attributes'].cash_on_hand),cycle:data.response.summary['@attributes'].cycle,debt:formatDollars(data.response.summary['@attributes'].debt),lastUpdated:data.response.summary['@attributes'].last_updated,nextElection:data.response.summary['@attributes'].next_election,origin:data.response.summary['@attributes'].origin,spent:formatDollars(data.response.summary['@attributes'].spent),total:formatDollars(data.response.summary['@attributes'].total)}};};const getOpenSecretsSummary=async id=>{try{const data=await fetchOpenSecretsData(\"\".concat(process.env.REACT_APP_API_URL,\"/api/open_secrets/summary/\").concat(id));return reshapeOpenSecretsSummary(data);}catch(error){console.error('Error fetching data:',error);return{summary:{},error:true,errorMessage:error.message};}};export default getOpenSecretsSummary;","map":{"version":3,"names":["fetchOpenSecretsData","url","response","fetch","ok","Error","concat","status","json","reshapeOpenSecretsSummary","data","formatDollars","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","summary","cashOnHand","cash_on_hand","cycle","debt","lastUpdated","last_updated","nextElection","next_election","origin","spent","total","getOpenSecretsSummary","id","process","env","REACT_APP_API_URL","error","console","errorMessage","message"],"sources":["/Users/dbrainy/dev/deployed-rep-radar/rep-radar/front-end/src/api/openSecretsSummary.js"],"sourcesContent":["const fetchOpenSecretsData = async (url) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new Error(`HTTP error. Status: ${response.status}`);\n    }\n    return response.json();\n};\n\nconst reshapeOpenSecretsSummary = (data) => {\n    function formatDollars(amount) {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0,\n        }).format(amount);\n    }\n\n    return {\n        summary: {\n            cashOnHand: formatDollars(data.response.summary['@attributes'].cash_on_hand),\n            cycle: data.response.summary['@attributes'].cycle,\n            debt: formatDollars(data.response.summary['@attributes'].debt),\n            lastUpdated: data.response.summary['@attributes'].last_updated,\n            nextElection: data.response.summary['@attributes'].next_election,\n            origin: data.response.summary['@attributes'].origin,\n            spent: formatDollars(data.response.summary['@attributes'].spent),\n            total: formatDollars(data.response.summary['@attributes'].total),\n        }\n    };\n};\n\nconst getOpenSecretsSummary = async (id) => {\n    try {\n        const data = await fetchOpenSecretsData(`${process.env.REACT_APP_API_URL}/api/open_secrets/summary/${id}`);\n        return reshapeOpenSecretsSummary(data);\n    } catch (error) {\n        console.error('Error fetching data:', error);\n        return {\n            summary: {},\n            error: true,\n            errorMessage: error.message\n        };\n    }\n};\n\nexport default getOpenSecretsSummary;\n"],"mappings":"AAAA,KAAM,CAAAA,oBAAoB,CAAG,KAAO,CAAAC,GAAG,EAAK,CACxC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACF,GAAG,CAAC,CACjC,GAAI,CAACC,QAAQ,CAACE,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,wBAAAC,MAAA,CAAwBJ,QAAQ,CAACK,MAAM,CAAE,CAAC,CAC7D,CACA,MAAO,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,yBAAyB,CAAIC,IAAI,EAAK,CACxC,QAAS,CAAAC,aAAaA,CAACC,MAAM,CAAE,CAC3B,MAAO,IAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CAClCC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KAAK,CACfC,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CAC3B,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAAC,CACrB,CAEA,MAAO,CACHQ,OAAO,CAAE,CACLC,UAAU,CAAEV,aAAa,CAACD,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACE,YAAY,CAAC,CAC5EC,KAAK,CAAEb,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACG,KAAK,CACjDC,IAAI,CAAEb,aAAa,CAACD,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACI,IAAI,CAAC,CAC9DC,WAAW,CAAEf,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACM,YAAY,CAC9DC,YAAY,CAAEjB,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACQ,aAAa,CAChEC,MAAM,CAAEnB,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACS,MAAM,CACnDC,KAAK,CAAEnB,aAAa,CAACD,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACU,KAAK,CAAC,CAChEC,KAAK,CAAEpB,aAAa,CAACD,IAAI,CAACR,QAAQ,CAACkB,OAAO,CAAC,aAAa,CAAC,CAACW,KAAK,CACnE,CACJ,CAAC,CACL,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAG,KAAO,CAAAC,EAAE,EAAK,CACxC,GAAI,CACA,KAAM,CAAAvB,IAAI,CAAG,KAAM,CAAAV,oBAAoB,IAAAM,MAAA,CAAI4B,OAAO,CAACC,GAAG,CAACC,iBAAiB,+BAAA9B,MAAA,CAA6B2B,EAAE,CAAE,CAAC,CAC1G,MAAO,CAAAxB,yBAAyB,CAACC,IAAI,CAAC,CAC1C,CAAE,MAAO2B,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,MAAO,CACHjB,OAAO,CAAE,CAAC,CAAC,CACXiB,KAAK,CAAE,IAAI,CACXE,YAAY,CAAEF,KAAK,CAACG,OACxB,CAAC,CACL,CACJ,CAAC,CAED,cAAe,CAAAR,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}