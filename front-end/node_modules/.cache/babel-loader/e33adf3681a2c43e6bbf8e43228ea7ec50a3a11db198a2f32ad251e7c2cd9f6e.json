{"ast":null,"code":"const fetchCivicInfoData = async url => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error. Status: ${response.status}`);\n  }\n  return response.json();\n};\nconst reshapeCivicInfoData = data => {\n  function extractDistrictNumber(inputString) {\n    const cdSection = inputString.split(\"cd:\");\n    if (cdSection.length === 2) {\n      return parseInt(cdSection[1], 10);\n    } else if (!inputString.includes(\"cd:\")) {\n      return \"At-Large\";\n    }\n    return null;\n  }\n  return {\n    representative: {\n      name: data.officials[0].name,\n      party: data.officials[0].party,\n      urls: data.officials[0].urls,\n      channels: data.officials[0].channels,\n      office: data.offices[0].name,\n      district: extractDistrictNumber(data.offices[0].divisionId),\n      state: data.normalizedInput.state\n    }\n  };\n};\nconst getCivicInfoData = async address => {\n  try {\n    const data = await fetchCivicInfoData(`${process.env.REACT_APP_API_URL}/api/civic_info/${address}`);\n    console.log('API URL SHOULD BE 8000:', process.env.REACT_APP_API_URL);\n    return reshapeCivicInfoData(data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return {\n      representative: {},\n      error: true,\n      errorMessage: error.message\n    };\n  }\n  ;\n};\nexport default getCivicInfoData;","map":{"version":3,"names":["fetchCivicInfoData","url","response","fetch","ok","Error","status","json","reshapeCivicInfoData","data","extractDistrictNumber","inputString","cdSection","split","length","parseInt","includes","representative","name","officials","party","urls","channels","office","offices","district","divisionId","state","normalizedInput","getCivicInfoData","address","process","env","REACT_APP_API_URL","console","log","error","errorMessage","message"],"sources":["/Users/dbrainy/dev/deployed-rep-radar/rep-radar/front-end/src/api/civicInfo.js"],"sourcesContent":["const fetchCivicInfoData = async (url) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new Error(`HTTP error. Status: ${response.status}`);\n    }\n    return response.json();\n};\n\nconst reshapeCivicInfoData = (data) => {\n\n    function extractDistrictNumber(inputString) {\n        const cdSection = inputString.split(\"cd:\");\n        if (cdSection.length === 2) {\n            return parseInt(cdSection[1], 10);\n        }\n        else if (!inputString.includes(\"cd:\")) {\n            return \"At-Large\";\n        }\n        return null;\n    }\n\n    return {\n        representative: {\n            name: data.officials[0].name,\n            party: data.officials[0].party,\n            urls: data.officials[0].urls,\n            channels: data.officials[0].channels,\n            office: data.offices[0].name,\n            district: extractDistrictNumber(data.offices[0].divisionId),\n            state: data.normalizedInput.state,\n        },\n    };\n};\n\nconst getCivicInfoData = async (address) => {\n    try {\n        const data = await fetchCivicInfoData(`${process.env.REACT_APP_API_URL}/api/civic_info/${address}`);\n        console.log('API URL SHOULD BE 8000:', process.env.REACT_APP_API_URL);\n        return reshapeCivicInfoData(data);\n    } catch (error) {\n        console.error('Error fetching data:', error);\n        return {\n            representative: {},\n            error: true,\n            errorMessage: error.message\n        };\n    };\n};\n\nexport default getCivicInfoData;\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,MAAOC,GAAG,IAAK;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;EAC7D;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;EAEnC,SAASC,qBAAqBA,CAACC,WAAW,EAAE;IACxC,MAAMC,SAAS,GAAGD,WAAW,CAACE,KAAK,CAAC,KAAK,CAAC;IAC1C,IAAID,SAAS,CAACE,MAAM,KAAK,CAAC,EAAE;MACxB,OAAOC,QAAQ,CAACH,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;IACrC,CAAC,MACI,IAAI,CAACD,WAAW,CAACK,QAAQ,CAAC,KAAK,CAAC,EAAE;MACnC,OAAO,UAAU;IACrB;IACA,OAAO,IAAI;EACf;EAEA,OAAO;IACHC,cAAc,EAAE;MACZC,IAAI,EAAET,IAAI,CAACU,SAAS,CAAC,CAAC,CAAC,CAACD,IAAI;MAC5BE,KAAK,EAAEX,IAAI,CAACU,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK;MAC9BC,IAAI,EAAEZ,IAAI,CAACU,SAAS,CAAC,CAAC,CAAC,CAACE,IAAI;MAC5BC,QAAQ,EAAEb,IAAI,CAACU,SAAS,CAAC,CAAC,CAAC,CAACG,QAAQ;MACpCC,MAAM,EAAEd,IAAI,CAACe,OAAO,CAAC,CAAC,CAAC,CAACN,IAAI;MAC5BO,QAAQ,EAAEf,qBAAqB,CAACD,IAAI,CAACe,OAAO,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC;MAC3DC,KAAK,EAAElB,IAAI,CAACmB,eAAe,CAACD;IAChC;EACJ,CAAC;AACL,CAAC;AAED,MAAME,gBAAgB,GAAG,MAAOC,OAAO,IAAK;EACxC,IAAI;IACA,MAAMrB,IAAI,GAAG,MAAMT,kBAAkB,CAAE,GAAE+B,OAAO,CAACC,GAAG,CAACC,iBAAkB,mBAAkBH,OAAQ,EAAC,CAAC;IACnGI,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEJ,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAC;IACrE,OAAOzB,oBAAoB,CAACC,IAAI,CAAC;EACrC,CAAC,CAAC,OAAO2B,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO;MACHnB,cAAc,EAAE,CAAC,CAAC;MAClBmB,KAAK,EAAE,IAAI;MACXC,YAAY,EAAED,KAAK,CAACE;IACxB,CAAC;EACL;EAAC;AACL,CAAC;AAED,eAAeT,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}