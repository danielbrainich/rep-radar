{"ast":null,"code":"import getCivicInfoData from './civicInfo';\nimport getOpenSecretsId from './openSecretsIds';\nimport getOpenSecretsContributions from './openSecretsContributions';\nimport getOpenSecretsSummary from './openSecretsSummary';\nimport getProPublicaIds from './proPublicaIds';\nimport getProPublicaStatements from './proPublicaStatements';\nimport getCongressGovBills from './congressGovBills';\nimport getCongressGovPhoto from './congressGovPhoto';\nimport getNewsApiData from './newsApi';\nconst fetchRepData = async formData => {\n  const address = `${formData.streetAddress} ${formData.city} ${formData.state} ${formData.zipCode}`;\n  const repData = await getCivicInfoData(address);\n  const proPubInfo = await getProPublicaIds(repData.representative.district, repData.representative.state);\n  const openSecretsId = await getOpenSecretsId(repData.representative.state, proPubInfo.id);\n  const contribData = await getOpenSecretsContributions(openSecretsId.repId);\n  const contribSummary = await getOpenSecretsSummary(openSecretsId.repId);\n  const congressGovPhoto = await getCongressGovPhoto(proPubInfo.id);\n  const sponsoredBillInfo = await getCongressGovBills(proPubInfo.id);\n  const statements = await getProPublicaStatements(proPubInfo.id);\n  const news = await getNewsApiData(repData.representative.name);\n  const allRepData = {\n    representativeInfo: repData,\n    repContribData: contribData.contributions,\n    repContribSummary: contribSummary.summary,\n    proPublicaInfo: proPubInfo,\n    repPhoto: congressGovPhoto,\n    repSponsoredBills: sponsoredBillInfo,\n    repStatements: statements,\n    news: news\n  };\n  console.log(\"All Rep Data:\", allRepData);\n  return allRepData;\n};\nexport default fetchRepData;","map":{"version":3,"names":["getCivicInfoData","getOpenSecretsId","getOpenSecretsContributions","getOpenSecretsSummary","getProPublicaIds","getProPublicaStatements","getCongressGovBills","getCongressGovPhoto","getNewsApiData","fetchRepData","formData","address","streetAddress","city","state","zipCode","repData","proPubInfo","representative","district","openSecretsId","id","contribData","repId","contribSummary","congressGovPhoto","sponsoredBillInfo","statements","news","name","allRepData","representativeInfo","repContribData","contributions","repContribSummary","summary","proPublicaInfo","repPhoto","repSponsoredBills","repStatements","console","log"],"sources":["/Users/dbrainy/dev/clean rep radar/rep-radar/front-end/src/api/fetchRepData.js"],"sourcesContent":["import getCivicInfoData from './civicInfo';\nimport getOpenSecretsId from './openSecretsIds';\nimport getOpenSecretsContributions from './openSecretsContributions';\nimport getOpenSecretsSummary from './openSecretsSummary';\nimport getProPublicaIds from './proPublicaIds';\nimport getProPublicaStatements from './proPublicaStatements';\nimport getCongressGovBills from './congressGovBills';\nimport getCongressGovPhoto from './congressGovPhoto';\nimport getNewsApiData from './newsApi';\n\nconst fetchRepData = async (formData) => {\n    const address = `${formData.streetAddress} ${formData.city} ${formData.state} ${formData.zipCode}`;\n    const repData = await getCivicInfoData(address);\n    const proPubInfo = await getProPublicaIds(repData.representative.district, repData.representative.state);\n    const openSecretsId = await getOpenSecretsId(repData.representative.state, proPubInfo.id);\n    const contribData = await getOpenSecretsContributions(openSecretsId.repId);\n    const contribSummary = await getOpenSecretsSummary(openSecretsId.repId);\n    const congressGovPhoto = await getCongressGovPhoto(proPubInfo.id);\n    const sponsoredBillInfo = await getCongressGovBills(proPubInfo.id);\n    const statements = await getProPublicaStatements(proPubInfo.id);\n    const news = await getNewsApiData(repData.representative.name);\n\n    const allRepData =  {\n        representativeInfo: repData,\n        repContribData: contribData.contributions,\n        repContribSummary: contribSummary.summary,\n        proPublicaInfo: proPubInfo,\n        repPhoto: congressGovPhoto,\n        repSponsoredBills: sponsoredBillInfo,\n        repStatements: statements,\n        news: news,\n    };\n    console.log(\"All Rep Data:\", allRepData)\n    return allRepData\n};\n\nexport default fetchRepData;\n"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,aAAa;AAC1C,OAAOC,gBAAgB,MAAM,kBAAkB;AAC/C,OAAOC,2BAA2B,MAAM,4BAA4B;AACpE,OAAOC,qBAAqB,MAAM,sBAAsB;AACxD,OAAOC,gBAAgB,MAAM,iBAAiB;AAC9C,OAAOC,uBAAuB,MAAM,wBAAwB;AAC5D,OAAOC,mBAAmB,MAAM,oBAAoB;AACpD,OAAOC,mBAAmB,MAAM,oBAAoB;AACpD,OAAOC,cAAc,MAAM,WAAW;AAEtC,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EACrC,MAAMC,OAAO,GAAI,GAAED,QAAQ,CAACE,aAAc,IAAGF,QAAQ,CAACG,IAAK,IAAGH,QAAQ,CAACI,KAAM,IAAGJ,QAAQ,CAACK,OAAQ,EAAC;EAClG,MAAMC,OAAO,GAAG,MAAMhB,gBAAgB,CAACW,OAAO,CAAC;EAC/C,MAAMM,UAAU,GAAG,MAAMb,gBAAgB,CAACY,OAAO,CAACE,cAAc,CAACC,QAAQ,EAAEH,OAAO,CAACE,cAAc,CAACJ,KAAK,CAAC;EACxG,MAAMM,aAAa,GAAG,MAAMnB,gBAAgB,CAACe,OAAO,CAACE,cAAc,CAACJ,KAAK,EAAEG,UAAU,CAACI,EAAE,CAAC;EACzF,MAAMC,WAAW,GAAG,MAAMpB,2BAA2B,CAACkB,aAAa,CAACG,KAAK,CAAC;EAC1E,MAAMC,cAAc,GAAG,MAAMrB,qBAAqB,CAACiB,aAAa,CAACG,KAAK,CAAC;EACvE,MAAME,gBAAgB,GAAG,MAAMlB,mBAAmB,CAACU,UAAU,CAACI,EAAE,CAAC;EACjE,MAAMK,iBAAiB,GAAG,MAAMpB,mBAAmB,CAACW,UAAU,CAACI,EAAE,CAAC;EAClE,MAAMM,UAAU,GAAG,MAAMtB,uBAAuB,CAACY,UAAU,CAACI,EAAE,CAAC;EAC/D,MAAMO,IAAI,GAAG,MAAMpB,cAAc,CAACQ,OAAO,CAACE,cAAc,CAACW,IAAI,CAAC;EAE9D,MAAMC,UAAU,GAAI;IAChBC,kBAAkB,EAAEf,OAAO;IAC3BgB,cAAc,EAAEV,WAAW,CAACW,aAAa;IACzCC,iBAAiB,EAAEV,cAAc,CAACW,OAAO;IACzCC,cAAc,EAAEnB,UAAU;IAC1BoB,QAAQ,EAAEZ,gBAAgB;IAC1Ba,iBAAiB,EAAEZ,iBAAiB;IACpCa,aAAa,EAAEZ,UAAU;IACzBC,IAAI,EAAEA;EACV,CAAC;EACDY,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,UAAU,CAAC;EACxC,OAAOA,UAAU;AACrB,CAAC;AAED,eAAerB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}