{"ast":null,"code":"const fetchProPublicaStatements = async repId => {\n  const apiUrl = `http://localhost:8000/api/pro_publica/statements/${repId}`;\n  try {\n    const response = await fetch(apiUrl);\n    if (!response.ok) {\n      throw new Error(`HTTP error. Status: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nconst reshapeProPublicaResponse = data => {\n  return data;\n};\nconst getProPublicaStatements = async repId => {\n  try {\n    const rawData = await fetchProPublicaStatements(repId);\n    const reshapedData = reshapeProPublicaResponse(rawData);\n    return reshapedData;\n  } catch (error) {\n    console.error('Error in getProPublicaStatements:', error);\n    return {\n      error: true,\n      message: error.message || 'An error occurred while fetching data',\n      data: null\n    };\n  }\n};\nexport default getProPublicaStatements;","map":{"version":3,"names":["fetchProPublicaStatements","repId","apiUrl","response","fetch","ok","Error","status","json","error","console","reshapeProPublicaResponse","data","getProPublicaStatements","rawData","reshapedData","message"],"sources":["/Users/dbrainy/dev/clean rep radar/rep-report/front-end/src/api/proPublicaStatements.js"],"sourcesContent":["const fetchProPublicaStatements = async (repId) => {\n    const apiUrl = `http://localhost:8000/api/pro_publica/statements/${repId}`;\n\n    try {\n        const response = await fetch(apiUrl);\n        if (!response.ok) {\n            throw new Error(`HTTP error. Status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error fetching data:', error);\n        throw error;\n    }\n};\n\nconst reshapeProPublicaResponse = (data) => {\n    return data;\n};\n\nconst getProPublicaStatements = async (repId) => {\n    try {\n        const rawData = await fetchProPublicaStatements(repId);\n        const reshapedData = reshapeProPublicaResponse(rawData);\n        return reshapedData;\n    } catch (error) {\n        console.error('Error in getProPublicaStatements:', error);\n        return {\n            error: true,\n            message: error.message || 'An error occurred while fetching data',\n            data: null\n        };\n    }\n};\n\nexport default getProPublicaStatements;\n"],"mappings":"AAAA,MAAMA,yBAAyB,GAAG,MAAOC,KAAK,IAAK;EAC/C,MAAMC,MAAM,GAAI,oDAAmDD,KAAM,EAAC;EAE1E,IAAI;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,CAAC;IACpC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;IAC7D;IACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,MAAME,yBAAyB,GAAIC,IAAI,IAAK;EACxC,OAAOA,IAAI;AACf,CAAC;AAED,MAAMC,uBAAuB,GAAG,MAAOZ,KAAK,IAAK;EAC7C,IAAI;IACA,MAAMa,OAAO,GAAG,MAAMd,yBAAyB,CAACC,KAAK,CAAC;IACtD,MAAMc,YAAY,GAAGJ,yBAAyB,CAACG,OAAO,CAAC;IACvD,OAAOC,YAAY;EACvB,CAAC,CAAC,OAAON,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO;MACHA,KAAK,EAAE,IAAI;MACXO,OAAO,EAAEP,KAAK,CAACO,OAAO,IAAI,uCAAuC;MACjEJ,IAAI,EAAE;IACV,CAAC;EACL;AACJ,CAAC;AAED,eAAeC,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}